{"name":"X2Bus Energyboard","tagline":"X2Bus Energy Board - is an poly phase energy measurement development board.","body":"## Description\r\n\tThe EnergyBoard is an energy measurement processor for polyphase power-monitoring \r\n\tsystems. It is designed for real-time monitoring for a variety of typical three-phase \r\n\tconfigurations in industrial applications. The MAX78630 provides up to six analog \r\n\tinputs for interfacing to voltage and current sensors. Scaled voltages from the \r\n\tsensors are fed to the single converter front-end using a high-resolution delta-sigma \r\n\tconverter. Supported current sensors include current transformers (CTs), Rogowski \r\n\tcoils, and resistive shunts.  \r\n\t\r\n\tIn this Arduino Library we can read all data of energy parameters.\r\n\r\n## RMS Voltage\r\n\r\nThe EnergyBoard reports true RMS measurements for each input. An RMS value is \r\nobtained by performing the sum of the squares of instantaneous values over a time \r\ninterval (accumulation interval) and then performing a square root of the result \r\nafter dividing by the number of samples in the interval.\r\n\r\n![RMS Voltage](http://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Sine_wave_voltages.svg/530px-Sine_wave_voltages.svg.png)  \r\n`Vrms : Root Mean Square of Voltage`  \r\n`Vpk : Peak Voltage`  \r\n`Vpp : Peak to Peak Voltage`  \r\n\t\r\n\tSyntax\r\n\tEnergyBoard.Voltage(char phase);\r\n\t\r\n\tParameters\r\n\tphase : Phase of voltage (char) for example 'R', 'S', 'T'\r\n\t\r\n\tReturns\r\n\tVoltage value in float data type\r\n\t\r\n\tExample\r\n\tFloat Voltage_R = EnergyBoard.Voltage('R');\r\n\t\r\n## RMS Current\r\n\r\nThe EnergyBoard reports true RMS measurements for current inputs. The RMS current is \r\nobtained by performing the sum of the squares of the instantaneous voltage samples \r\nover the accumulation interval and then performing a square root of the result after \r\ndividing by the number of samples in the interval.\r\n\r\n\tSyntax\r\n\tEnergyBoard.Current(char phase);\r\n\t\r\n\tParameters\r\n\tphase : Phase of current (char) for example 'R', 'S', 'T'\r\n\t\r\n\tReturns\r\n\tCurrent value in float data type\r\n\t\r\n\tExample\r\n\tFloat Current_R = EnergyBoard.Current('R');\r\n\r\n## Active Power\r\n\r\nThe instantaneous power results (PA, PB, PC) are obtained by multiplying aligned instantaneous \r\nvoltage and current samples.\r\n\r\n![Active Power](http://www.electronics-tutorials.ws/accircuits/acp29.gif?74587b)\r\n\r\n\tSyntax\r\n\tEnergyBoard.ActivePower(char phase);\r\n\t\r\n\tParameters\r\n\tphase : Phase of power (char) for example 'R', 'S', 'T'\r\n\t\r\n\tReturns\r\n\tActive Power value in float data type\r\n\t\r\n\tExample\r\n\tFloat ActivePower_R = EnergyBoard.ActivePower('R');\r\n\r\n## ReActive Power\r\n\r\nInstantaneous reactive power results are calculated by multiplying the instantaneous samples \r\nof current and the instantaneous quadrature voltage. \r\n\r\n![ReActive Power](http://www.blc.lsbu.ac.uk/eservices/Module1/Graphics/PF3.gif)\r\n\r\n\tSyntax\r\n\tEnergyBoard.ReactivePower(char phase);\r\n\t\r\n\tParameters\r\n\tphase : Phase of power (char) for example 'R', 'S', 'T'\r\n\t\r\n\tReturns\r\n\tReActive Power value in float data type\r\n\t\r\n\tExample\r\n\tFloat ReactivePower_R = EnergyBoard.ReactivePower('R');\r\n\r\n## Apparent Power\r\n\r\nThe apparent power, also referred as Volt-Amps, is the product of low rate RMS voltage and \r\ncurrent results. Offsets applied to RMS current will affect apparent power results.\r\n\r\n\tSyntax\r\n\tEnergyBoard.ApparentPower(char phase);\r\n\t\r\n\tParameters\r\n\tphase : Phase of power (char) for example 'R', 'S', 'T'\r\n\t\r\n\tReturns\r\n\tApparent Power value in float data type\r\n\t\r\n\tExample\r\n\tFloat ApparentPower_R = EnergyBoard.ApparentPower('R');\r\n  \r\n## PowerFactor (Cosfi)\r\n\r\nThe apparent power, also referred as Volt-Amps, is the product of low rate RMS voltage \r\nand current results. Offsets applied to RMS current will affect apparent power results.\r\n\r\n![Cos Fi](http://www.practicalmachinist.com/vb/attachments/f11/35192d1307402684-calc-power-consumption-elect-meter-power-triangle.jpg)  \r\n\r\n\tSyntax\r\n\tEnergyBoard.PowerFactor(char phase);\r\n\t\r\n\tParameters\r\n\tphase : Phase of power factor (char) for example 'R', 'S', 'T'\r\n\t\r\n\tReturns\r\n\tPowerFactor value in float data type\r\n\t\r\n\tExample\r\n\tFloat PowerFactor_R = EnergyBoard.PowerFactor('R');\r\n\r\n## Frequency\r\n\r\n\tSyntax\r\n\tEnergyBoard.Frequency(char phase);\r\n\t\r\n\tParameters\r\n\tNone\r\n\t\r\n\tReturns\r\n\tFrequency value in float data type\r\n\t\r\n\tExample\r\n\tFloat Frequency = EnergyBoard.Frequency();\r\n\r\n## Licences\r\n\r\nAll source code is licensed under the [MIT License](http://opensource.org/licenses/MIT)\r\n\r\n\tCopyright (c) 2015 X2bus <info@x2bus.com>\r\n\t \r\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\r\n\tof this software and associated documentation files (the \"Software\"), to deal\r\n\tin the Software without restriction, including without limitation the rights\r\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n\tcopies of the Software, and to permit persons to whom the Software is furnished\r\n\tto do so, subject to the following conditions:\r\n\t \r\n\tThe above copyright notice and this permission notice shall be included in all\r\n\tcopies or substantial portions of the Software.\r\n\t \r\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n\tTHE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}